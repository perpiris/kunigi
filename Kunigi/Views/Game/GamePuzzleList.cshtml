@model GamePuzzleDetailsViewModel

@{
    ViewData["Title"] = Model.GameDetails.GameType;
    var groupedPuzzles = Model.PuzzleList.GroupBy(p => p.Group).ToList();
}

<style>
    .media-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 16px;
        margin-top: 16px;
    }

    .media-grid > .media-item {
        border: 1px solid #ddd;
        padding: 8px;
        border-radius: 4px;
        text-align: center;
        background-color: #f9f9f9;
    }

    .media-grid.single-item {
        grid-template-columns: repeat(2, minmax(150px, 1fr));
    }

    .nested-accordion .accordion-button {
        padding-left: 2rem;
    }
</style>

<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item">
        <a asp-controller="Game" asp-action="ParentGameList">Παιχνίδια</a>
    </li>
    <li class="breadcrumb-item">
        <a asp-controller="Game" asp-action="ParentGameDetails" asp-route-gameYear="@Model.GameDetails.Year">@($"{Model.GameDetails.Title} ({Model.GameDetails.Year})")</a>
    </li>
    <li class="breadcrumb-item active">@Model.GameDetails.GameType</li>
</ol>
<p class="lead mb-4">@Model.GameDetails.Description</p>
<div class="accordion" id="puzzleAccordion">
    @{
        var groupNumber = 1;
    }

    @foreach (var group in groupedPuzzles)
    {
        var isMultiPuzzleGroup = group.Count() > 1;
        if (isMultiPuzzleGroup)
        {
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingGroup@(group.Key)">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseGroup@(group.Key)">
                        <span class="me-2">@($"Πακέτο {groupNumber++} - Γρίφοι {string.Join(",", group.OrderBy(p => p.Order).Select(p => p.Order))}")</span>
                    </button>
                </h2>
                <div id="collapseGroup@(group.Key)" class="accordion-collapse collapse" data-bs-parent="#puzzleAccordion">
                    <div class="accordion-body">
                        <div class="accordion nested-accordion" id="groupAccordion@(group.Key)">
                            @foreach (var puzzle in group.OrderBy(p => p.Order))
                            {
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="headingPuzzle@(puzzle.Id)">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePuzzle@(puzzle.Id)">
                                            <span class="me-2">@($"{puzzle.Order}ος Γρίφος")</span>
                                            <span class="badge bg-secondary">@puzzle.Type</span>
                                        </button>
                                    </h2>
                                    <div id="collapsePuzzle@(puzzle.Id)" class="accordion-collapse collapse" data-bs-parent="#groupAccordion@(group.Key)">
                                        <div class="accordion-body">
                                            <div class="row">
                                                <div class="col-md-6 border-end">
                                                    <h6 class="mb-2 text-muted">Γρίφος:</h6>
                                                    <p>@puzzle.Question</p>
                                                    @if (puzzle.QuestionMedia.Any())
                                                    {
                                                        var questionMediaClass = puzzle.QuestionMedia.Count() == 1 ? "media-grid single-item" : "media-grid";
                                                        <div class="@questionMediaClass">
                                                            @foreach (var media in puzzle.QuestionMedia)
                                                            {
                                                                @await Html.PartialAsync("_MediaPreview", media)
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                                <div class="col-md-6">
                                                    <h6 class="mb-2 text-muted">Απάντηση:</h6>
                                                    <p>@puzzle.Answer</p>
                                                    @if (puzzle.AnswerMedia.Any())
                                                    {
                                                        var answerMediaClass = puzzle.AnswerMedia.Count() == 1 ? "media-grid single-item" : "media-grid";
                                                        <div class="@answerMediaClass">
                                                            @foreach (var media in puzzle.AnswerMedia)
                                                            {
                                                                @await Html.PartialAsync("_MediaPreview", media)
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            var puzzle = group.First();
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingPuzzle@(puzzle.Id)">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePuzzle@(puzzle.Id)">
                        <span class="me-2">@($"{puzzle.Order}ος Γρίφος")</span>
                        <span class="badge bg-secondary">@puzzle.Type</span>
                    </button>
                </h2>
                <div id="collapsePuzzle@(puzzle.Id)" class="accordion-collapse collapse" data-bs-parent="#puzzleAccordion">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-6 border-end">
                                <h6 class="mb-2 text-muted">Γρίφος:</h6>
                                <p>@puzzle.Question</p>
                                @if (puzzle.QuestionMedia.Any())
                                {
                                    var questionMediaClass = puzzle.QuestionMedia.Count() == 1 ? "media-grid single-item" : "media-grid";
                                    <div class="@questionMediaClass">
                                        @foreach (var media in puzzle.QuestionMedia)
                                        {
                                            @await Html.PartialAsync("_MediaPreview", media)
                                        }
                                    </div>
                                }
                            </div>
                            <div class="col-md-6">
                                <h6 class="mb-2 text-muted">Απάντηση:</h6>
                                <p>@puzzle.Answer</p>
                                @if (puzzle.AnswerMedia.Any())
                                {
                                    var answerMediaClass = puzzle.AnswerMedia.Count() == 1 ? "media-grid single-item" : "media-grid";
                                    <div class="@answerMediaClass">
                                        @foreach (var media in puzzle.AnswerMedia)
                                        {
                                            @await Html.PartialAsync("_MediaPreview", media)
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>